menupopup:not(.PanelUI-subView) {
    appearance: none !important;
    background: var(--menupopup-background) !important;
    border: none !important;
    border-radius: 0 !important;
    margin: var(--menupopup-margin) !important;
    overflow: visible !important;
}

menupopup:not(.PanelUI-subView) menu > menupopup {
    margin-inline-start: var(--menupopup-child-margin-inline-start) !important;
    margin-block-start: var(--menupopup-child-margin-block-start) !important;
}

.panel-arrowcontent {
    border-radius: var(--menupopup-border-radius) !important;
    overflow: hidden !important;
    border: none !important;
}

menupopup:not(.PanelUI-subView) :is(menuitem, menu) {
    appearance: none !important;
    color: var(--ui-text-80) !important;
    padding: 5px 0 !important;
    min-height: 26px !important;
    border-radius: var(--context-menuitem-border-radius);
}

#openHandlerPopup :is(menuitem, menu) {
    padding-inline-start: 5px !important;
}

menupopup:not(.PanelUI-subView) :is(menuitem, menu)[disabled="true"] {
    appearance: none !important;
    color: var(--panel-disabled-color) !important;
    background-color: initial !important;
}

menupopup:not(.PanelUI-subView) :is(menuitem, menu) .menu-iconic-left {
    padding: 0 !important;
    appearance: none !important;
    margin-inline-end: 0 !important;
}

menupopup:not(.PanelUI-subView) :is(menuitem, menu) .menu-iconic-icon {
    margin-inline: var(--context-iconic-margin);
}

#contentAreaContextMenu > .menuitem-iconic > .menu-iconic-left > .menu-iconic-icon {
    fill: currentColor;
    -moz-context-properties: fill, fill-opacity, stroke;
}

moz-input-box > menupopup .context-menu-add-engine > .menu-iconic-left::after {
    background: url(chrome://userchrome/content/skin/search-indicator-badge-add.svg) no-repeat center/contain !important;
    -moz-context-properties: fill, fill-opacity, stroke !important;
    fill: var(--update-badge-bg) !important;
    stroke: var(--update-badge-color) !important;
    height: 12px !important;
    width: 12px !important;
    margin-inline: -12px 0px !important;
    margin-top: -13px !important;
}

menupopup:not(.PanelUI-subView) menugroup {
    padding: 0 !important;
    background-color: transparent !important;
}

menupopup:not(.PanelUI-subView) .menu-right {
    appearance: none !important;
    padding: 0px !important;
    margin-right: var(--menu-right-margin) !important;
    min-width: 0 !important;
    width: var(--menu-right-size) !important;
    height: var(--menu-right-size) !important;
    fill: currentColor !important;
    -moz-context-properties: fill, fill-opacity, stroke, stroke-opacity !important;
    fill-opacity: 0.6 !important;
    background-size: 10px 10px !important;
    background-position: center !important;
    background-repeat: no-repeat !important;
    background-image: var(--menu-right-bg) !important;
    list-style-image: var(--menu-right-img) !important;
}

menupopup:not(.PanelUI-subView) menu[disabled="true"] > .menu-right {
    visibility: collapse;
}

menupopup:not(.PanelUI-subView)
    :is(menu, menuitem):is(:hover, [_moz-menuactive="true"]):not([disabled="true"]) {
    appearance: none !important;
    background-color: var(--arrowpanel-dimmed) !important;
}

menupopup:not(.PanelUI-subView)
    :is(menu, menuitem):is(:hover, [_moz-menuactive="true"])[disabled="true"] {
    background: none !important;
    appearance: none !important;
}

.subviewbutton:is(:hover, [_moz-menuactive="true"])[disabled="true"] {
    color: var(--panel-disabled-color) !important;
}

menu.subviewbutton:not([disabled="true"])[_moz-menuactive="true"]:active {
    background: var(--arrowpanel-dimmed) !important;
    box-shadow: none !important;
}

menupopup menuitem:is([type="checkbox"], [type="radio"])::before {
    position: relative;
    display: -moz-inline-box;
    width: 14px;
    height: 14px;
    margin-inline: var(--context-checkbox-margin);
    fill: currentColor;
    -moz-context-properties: fill, fill-opacity, stroke;
    content: "";
    background-position: center;
    background-repeat: no-repeat;
    background-size: contain;
    border: 1px solid var(--checkbox-border-color);
    background-color: var(--checkbox-unchecked-bgcolor);
    color: var(--in-parent-primary-button-text-color);
}

menupopup .unified-nav-current[type="radio"][checked="true"] {
    font-weight: 600 !important;
    color: white !important;
}

menupopup .unified-nav-current[type="radio"][checked="true"]::before {
    width: 16px;
    height: 16px;
    margin-inline: var(--context-iconic-margin); !important;
    background-image: url(chrome://userchrome/content/check.svg);
    border-radius: 2px;
    fill-opacity: 1;
}

menupopup menuitem[class^="unified-nav"][type="radio"]:not([checked="true"])::before {
    display: none;
}

menupopup
    menuitem[class^="unified-nav"][type="radio"]:not([checked="true"])
    :is(.menu-iconic-left, .menu-iconic-icon) {
    display: -moz-box !important;
}

menupopup menuitem[type="checkbox"]::before {
    border-radius: 2px;
}

menupopup
    menuitem:is([type="checkbox"], [type="radio"]):is(:hover, [_moz-menuactive="true"])::before {
    background-color: var(--checkbox-unchecked-hover-bgcolor);
}

menupopup
    menuitem:is([type="checkbox"], [type="radio"]):is(:hover, [_moz-menuactive="true"]):active::before {
    background-color: var(--checkbox-unchecked-active-bgcolor);
}

menupopup
    menuitem:is([type="checkbox"], [type="radio"])[checked="true"]:is(:hover, [_moz-menuactive="true"])::before {
    background-color: var(--checkbox-checked-hover-bgcolor);
}

menupopup
    menuitem:is([type="checkbox"], [type="radio"])[checked="true"]:is(:hover, [_moz-menuactive="true"]):active::before {
    background-color: var(--checkbox-checked-active-bgcolor);
}

menupopup menuitem[type="checkbox"][checked="true"]::before {
    background-image: url(chrome://userchrome/content/check.svg);
    border-color: var(--checkbox-checked-border-color);
    background-color: var(--checkbox-checked-bgcolor);
}

menupopup menuitem[type="radio"]::before,
#main-menubar #viewSidebarMenu menuitem[type="checkbox"]::before {
    border-radius: 100%;
}

menupopup menuitem[type="radio"][checked="true"]::before,
#main-menubar #viewSidebarMenu menuitem[checked="true"]::before {
    background-image: url(chrome://userchrome/content/radio.svg);
    border-color: var(--checkbox-checked-border-color);
    background-color: var(--checkbox-checked-bgcolor);
}

menupopup menuitem:is([type="checkbox"], [type="radio"]) .menu-iconic-left {
    display: none;
}

#ContentSelectDropdown > menupopup > :is(menucaption, menuitem) > .menu-iconic-text,
menupopup.in-menulist > :is(menucaption, menuitem) > .menu-iconic-text {
    padding-block: unset !important;
}

:is(#ContentSelectDropdown, menupopup.in-menulist, .contentSelectDropdown-ingroup)
    :is(menu, menuitem, menucaption) {
    padding-inline: 8px !important;
    min-height: 26px !important;
    border: none !important;
}

:is(#ContentSelectDropdown, menupopup.in-menulist, .contentSelectDropdown-ingroup)
    :is(menu, menuitem, menucaption)
    > :is(label, .menu-iconic-text, .menu-text) {
    padding-inline: 0 !important;
    font: menu !important;
}

:is(#ContentSelectDropdown, menupopup.in-menulist, .contentSelectDropdown-ingroup) menucaption {
    font-weight: inherit !important;
    min-height: 25px !important;
}

:is(#ContentSelectDropdown, menupopup.in-menulist, .contentSelectDropdown-ingroup)
    menucaption:first-child {
    margin-bottom: 2px !important;
    border-bottom: 1px solid var(--menu-separator-color) !important;
}

:is(#ContentSelectDropdown, menupopup.in-menulist, .contentSelectDropdown-ingroup)
    menucaption
    > label {
    font-weight: inherit !important;
    font-style: inherit !important;
}

:is(#ContentSelectDropdown, menupopup.in-menulist, .contentSelectDropdown-ingroup)
    menucaption:first-child
    > label {
    margin-block: -3px 0 !important;
}

#ContentSelectDropdown > menupopup {
    background-color: transparent !important;
    --content-select-background-image: none !important;
    /* a gradient background image is added on top of the menupopup based on the appearance of the select element in-content.
    if you want all select dropdowns to have the same, standard color then leave this alone. if you want the select dropdowns to match the color of the menulist (as defined by the website) then comment out the rule above. however, this can cause problems on sites that have really heavily customized menulists with light backgrounds. the background color is generated correctly but the text color may not be, in which case you get white text on a white background. I like the idea of this background image feature but it needs work, since this issue crops up on major popular websites like amazon.com */
}

#ContentSelectDropdown > menupopup > menuitem:not([_moz-menuactive="true"]),
menupopup.in-menulist > menuitem:not([_moz-menuactive="true"]) {
    background-color: transparent !important;
    color: var(--ui-text-80) !important;
}

#ContentSelectDropdown > menupopup {
    color: var(--ui-text-80) !important;
    background-image: unset !important;
}

menupopup.in-menulist {
    appearance: none !important;
    border: none !important;
    border-radius: var(--menupopup-border-radius) !important;
    margin: var(--menupopup-margin) !important;
    overflow: hidden !important;
    color: var(--ui-text-80) !important;
    background-image: unset !important;
    --menu-background-color: var(--ui-secondary-bg) !important;
}

.contentSelectDropdown-searchbox {
    appearance: none !important;
    font: menu !important;
    color: inherit !important;
    border-radius: var(--context-menuitem-border-radius);
    margin-block: 0 !important;
    margin-inline: var(--menupopup-inner-padding-magnitude) !important;
    padding-inline-start: 3px !important;
    background-color: var(--arrowpanel-dimmed) !important;
    padding-block: 0 !important;
    transition: 300ms background-color !important;
    min-height: 25px !important;
    -moz-user-modify: read-write !important;
}

.contentSelectDropdown-searchbox:focus-within {
    background-color: var(--search-box-focus) !important;
    transition: 300ms background-color !important;
}

.contentSelectDropdown-searchbox + :is(menu, menuitem) {
    margin-top: 4px;
}

menulist:-moz-focusring > menupopup.in-menulist > menuitem[_moz-menuactive="true"] {
    border: none !important;
}

@-moz-document url(chrome://browser/content/browser.xhtml)
{
    panel menulist {
        appearance: none !important;
        background-color: var(--ui-textbox-bgcolor) !important;
        padding: 2px 2px 2px 8px !important;
        min-height: 25px !important;
        color: inherit !important;
        fill: currentColor !important;
        border: none !important;
        outline: none !important;
        box-shadow: none !important;
        border-radius: var(--context-menuitem-border-radius) !important;
    }

    panel menulist:is(:focus-visible, [open="true"]) {
        background-color: var(--ui-textbox-focus-bgcolor) !important;
    }
}

#SyncedTabsSidebarTabsFilterContext #syncedTabsRefreshFilter {
    display: none !important;
}

.spell-suggestion {
    font-weight: normal !important;
    font-style: italic;
}

/* proton */
@media (-moz-proton-contextmenus) {
    menupopup {
        padding: var(--menupopup-padding) !important;
        background-color: transparent !important;
        border-color: transparent !important;
    }

    menu > menupopup {
        margin-inline-start: var(--menupopup-child-margin-inline-start) !important;
    }

    menupopup > :is(menuitem, menu, menucaption, menugroup, menuseparator, search-textbox),
    #PopupAutoComplete > richlistbox > richlistitem {
        margin-inline: var(--menupopup-inner-padding-magnitude);
    }

    :not(.subviewbutton) > .menu-text {
        padding-inline: var(--context-padding-inline) !important;
    }

    .menupopup-arrowscrollbox {
        background-color: var(--menu-background-color) !important;
        color: var(--menu-color) !important;
        border: none !important;
        border-radius: var(--menupopup-border-radius) !important;
        box-shadow: var(--menupopup-shadow) !important;
    }

    :is(.menu-accel, .menu-iconic-accel)[value] {
        margin-inline: 1.55em calc(var(--menu-right-margin) + 4px) !important;
        padding-block: 0 !important;
    }

    menuitem:not([disabled="true"]) :is(.menu-accel, .menu-iconic-accel) {
        color: var(--panel-shortcut-color);
    }

    menuitem[disabled="true"] :is(.menu-accel, .menu-iconic-accel) {
        opacity: 0.6;
    }

    menupopup:not(.PanelUI-subView) menuseparator {
        border-image: linear-gradient(
            to right,
            transparent 1%,
            var(--menu-separator-color) 50%,
            transparent 99%
        ) !important;
        border-image-slice: 1 !important;
        border-top-width: 1px !important;
        border-top-style: solid !important;
        padding: 0 !important;
        margin-inline: var(--menupopup-inner-padding-magnitude) !important;
    }

    menupopup:not(.PanelUI-subView) menuseparator:last-child {
        display: none;
    }

    #contentAreaContextMenu
        menuseparator[id]:not(#context-sep-open, #context-media-sep-commands, #context-sep-copylink, #spell-suggestions-separator, #context-sep-selectall) {
        display: none !important;
    }

    @-moz-document url("chrome://browser/content/browser.xhtml") {
        #contentAreaContextMenu menuseparator:not([id]) {
            display: -moz-box !important;
        }
    }

    #context-navigation .menuitem-iconic {
        min-width: 34px;
        height: 36px;
        padding: 0 !important;
        padding-bottom: 2px !important;
    }

    #context-navigation
        .menuitem-iconic:is(:hover, [_moz-menuactive="true"]):not([disabled="true"]) {
        background: none !important;
    }

    #context-navigation .menu-iconic-left {
        height: 34px;
        padding: 0 !important;
        -moz-box-flex: 1;
        border-radius: var(--arrowpanel-menuitem-border-radius);
    }

    #context-navigation
        .menuitem-iconic:is(:hover, [_moz-menuactive="true"]):not([disabled="true"])
        .menu-iconic-left {
        background: var(--arrowpanel-dimmed);
    }

    #context-navigation .menu-iconic-icon {
        margin: 0 !important;
        width: 16px !important;
        height: 16px !important;
        padding: 0 !important;
        background: none !important;
    }

    #context-sep-navigation {
        display: none;
    }

    #context-back {
        list-style-image: url(chrome://userchrome/content/skin/back.svg) !important;
    }

    #context-forward {
        list-style-image: url(chrome://userchrome/content/skin/forward.svg) !important;
    }

    #context-stop {
        list-style-image: url(chrome://userchrome/content/skin/stop.svg) !important;
    }

    #context-reload {
        list-style-image: url(chrome://userchrome/content/skin/reload.svg) !important;
    }

    #context-bookmarkpage {
        list-style-image: url(chrome://userchrome/content/skin/bookmark-hollow.svg) !important;
    }

    #context-bookmarkpage[starred="true"] {
        list-style-image: url(chrome://userchrome/content/skin/bookmark.svg) !important;
    }
}

/* proton disabled */
@media not (-moz-proton-contextmenus) {
    menupopup:not(.PanelUI-subView) menuseparator {
        /* appearance: none !important;
        max-height: 1px !important;
        border: none !important;
        padding: 0.5px 0 !important;
        margin: 0 10px !important;
        background-color: var(--ui-textbox-bgcolor) !important; */
        visibility: hidden !important;
        display: none !important;
    }

    /* menuseparator:not(:first-of-type) + :is(menu, menuitem) {
        border-top: 1px solid #363A59 !important;
        padding-top: 3px !important;
    } */

    :is(#PlacesToolbar, #places, .popup-notification-dropmarker)
        menupopup
        menuseparator:not([hidden="true"])
        + :is(menu, menuitem),
    :is(#new-tab-button-popup, #new-tab-button, #downloadsContextMenu, menupopup[menu-api], #ContentSelectDropdown, .new-tab-popup, #openHandlerPopup)
        menuseparator:not([hidden="true"])
        + :is(menu, menuitem),
    menupopup menuseparator:not(:first-of-type):not([hidden="true"]) + :is(menu, menuitem) {
        border-image: linear-gradient(
            to right,
            transparent 1%,
            var(--menu-separator-color) 50%,
            transparent 99%
        ) !important;
        border-image-slice: 1 !important;
        border-top-width: 1px !important;
        border-top-style: solid !important;
    }

    #context-navigation .menu-iconic-left {
        padding-block: 1px !important;
    }

    #context-navigation > menuitem {
        border-bottom-left-radius: 3px !important;
        border-bottom-right-radius: 3px !important;
    }

    #context-navigation > menuitem:first-of-type {
        border-bottom-left-radius: 0 !important;
        border-bottom-right-radius: 3px !important;
    }

    #context-navigation > menuitem:last-of-type {
        border-bottom-left-radius: 3px !important;
        border-bottom-right-radius: 0 !important;
    }
}
